{"version":3,"sources":["Components/DeleteBtn/DeleteBtn.module.css","Components/Phonebook/Contact.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","Components/Phonebook/Phonebook.jsx","Components/DeleteBtn/DeleteBtn.jsx","Components/Phonebook/Contact.jsx","Components/Phonebook/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","redux/reducers.js","redux/store.js","reportWebVitals.js","index.js","Components/Phonebook/Phonebook.module.css"],"names":["module","exports","addContactSuccess","createAction","addContactRequest","addContactError","deleteContactSuccess","deleteContactRequest","deleteContactError","fetchContactSuccess","fetchContactRequest","fetchContactError","filterContact","BASE_URL","getLoading","state","loader","getContacts","contacts","getVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","connect","loading","dispatch","handleSubmit","data","axios","post","then","catch","error","useState","setName","number","setNumber","className","styles","form","onSubmit","e","preventDefault","map","alert","id","uuidv4","label","input1","onChange","value","currentTarget","type","input2","DeleteBtn","props","deleteBtn","onClick","onClickDeleteBtn","Contact","fetchFirst","get","onDeleteBtnClick","delete","deleteContact","useEffect","dispatchFilter","query","setFilter","App","contactsReducer","createReducer","payload","filterReducer","_","loadingReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","reportWebVitals","persistStore","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72383dfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"DeleteBtn_deleteBtn__OsEoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1jUfj\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactSuccess = createAction(\"addContactSuccess\");\r\nexport const addContactRequest = createAction(\"addContactRequest\");\r\nexport const addContactError = createAction(\"addContactError\");\r\n\r\nexport const deleteContactSuccess = createAction(\"deleteContactSuccess\");\r\nexport const deleteContactRequest = createAction(\"deleteContactRequest\");\r\nexport const deleteContactError = createAction(\"deleteContactError\");\r\n\r\nexport const fetchContactSuccess = createAction(\"fetchContactSuccess\");\r\nexport const fetchContactRequest = createAction(\"fetchContactRequest\");\r\nexport const fetchContactError = createAction(\"fetchContactError\");\r\n\r\nexport const filterContact = createAction(\"filterContactSuccess\");\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n} from \"./actions\";\r\n\r\nconst BASE_URL = \"http://localhost:3004/\";\r\n\r\nexport const addContact = (data) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(`${BASE_URL}contacts`, data)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest(id));\r\n  axios\r\n    .delete(`${BASE_URL}contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContact = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get(`${BASE_URL}contacts/`)\r\n    .then((data) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.loader;\r\nexport const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;\r\n\r\n// export const getVisibleContacts = (state) =>\r\n//   getContacts(state).filter((contact) =>\r\n//     contact.name.toLowerCase().includes(getFilter(state))\r\n//   );\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) => contact.name.toLowerCase().includes(filter))\r\n);\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { addContact } from \"../../redux/operations\";\r\nimport { getContacts, getLoading } from \"../../redux/selectors\";\r\n\r\nfunction Phonebook({ handleSubmit, loading, contacts }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleAddName = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setName(value);\r\n  };\r\n\r\n  const handleAddNumber = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setNumber(value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (contacts.map((contact) => contact.name).includes(name)) {\r\n      alert(`${name} is already exists in contacts`);\r\n      return;\r\n    }\r\n    handleSubmit({ id: uuidv4(), name, number });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook {loading && <span>loading...</span>}</h2>\r\n      <form className={styles.form} onSubmit={onSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input1}\r\n            name={\"name\"}\r\n            onChange={handleAddName}\r\n            value={name}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input2}\r\n            name={\"number\"}\r\n            onChange={handleAddNumber}\r\n            value={number}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <button className={styles.input1} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  loading: getLoading(state),\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleSubmit: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import styles from \"./DeleteBtn.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction DeleteBtn(props) {\r\n  return (\r\n    <button\r\n      className={styles.deleteBtn}\r\n      onClick={props.onClickDeleteBtn}\r\n      type=\"button\"\r\n    >\r\n      Delete\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\nDeleteBtn.propTypes = {\r\n  onClickDeleteBtn: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DeleteBtn;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\nimport styles from \"./Contact.module.css\";\r\n\r\nfunction Contact(props) {\r\n  return (\r\n    <li className={styles.contact}>\r\n      {props.name} : {props.number}\r\n      <DeleteBtn onClickDeleteBtn={() => props.deleteBtn(props.id)} />\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\nContact.propTypes = {\r\n  deleteBtn: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import { connect } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../../redux/selectors\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { deleteContact, fetchContact } from \"../../redux/operations\";\r\nimport Contact from \"./Contact\";\r\n\r\nfunction ContactList({ contacts, onDeleteBtnClick, fetchFirst }) {\r\n  useEffect(() => {\r\n    fetchFirst();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      <ul>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <Contact\r\n              key={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              id={contact.id}\r\n              deleteBtn={() => onDeleteBtnClick(contact.id)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchFirst: () => dispatch(fetchContact()),\r\n  onDeleteBtnClick: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { filterContact } from \"../../redux/actions\";\r\n\r\nfunction Filter({ dispatchFilter }) {\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const handleFilter = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setFilter(value);\r\n    dispatchFilter(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input onChange={handleFilter} value={filter}></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatchFilter: (query) => dispatch(filterContact(query)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\n// import React, { useState, useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n\n// import store from \"./redux/store\";\nimport Phonebook from \"./Components/Phonebook/Phonebook\";\nimport ContactList from \"./Components/Phonebook/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\n// import { LS } from \"./redux/actions\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState([\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ]);\n\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"contacts\", JSON.stringify(store.getItem().contacts));\n  // }, []);\n\n  // const contactList = localStorage.getItem(\"contacts\")\n  //   ? localStorage.getItem(\"contacts\")\n  //   : JSON.stringify(store.getItem().contacts);\n\n  // const parsedContacts = JSON.parse(contactList);\n\n  // useEffect(() => {\n  //   getContactFromLS();\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n  // function getContactFromLS() {\n  //   if (parsedContacts) {\n  //     dispatchLS(parsedContacts);\n  //   }\n  // }\n\n  // const filterChangeHandler = (data) => {\n  //   setFilter(data);\n  // };\n\n  // const filterToLower = filter.toLowerCase();\n  // const rendered = contacts.filter((contact) =>\n  //   contact.name.toLowerCase().includes(filterToLower)\n  // );\n\n  return (\n    <div className=\"App\">\n      <Phonebook />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n// const mapStateToProps = (state) => state;\n\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatchLS: (contacts) => dispatch(LS(contacts)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  fetchContactSuccess,\r\n  filterContact,\r\n} from \"./actions\";\r\n\r\nexport const contactsReducer = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [fetchContactSuccess]: (state, { payload }) => payload.data,\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\nexport const filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload.toLowerCase(),\r\n});\r\n\r\nexport const loadingReducer = createReducer([], {\r\n  [addContactSuccess]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactError]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactSuccess]: () => false,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  // createReducer,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nimport { contactsReducer, filterReducer, loadingReducer } from \"./reducers\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loader: loadingReducer,\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store /*, persistor*/ } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__31gfV\",\"label\":\"Phonebook_label__2xxdn\",\"input1\":\"Phonebook_input1__288VC\",\"input2\":\"Phonebook_input2__eQUD9\"};"],"sourceRoot":""}